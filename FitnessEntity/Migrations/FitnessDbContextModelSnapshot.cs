// <auto-generated />
using System;
using FitnessEntity;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FitnessEntity.Migrations
{
    [DbContext(typeof(FitnessDbContext))]
    partial class FitnessDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FitnessEntity.AttendanceInfo", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime>("DanceTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DanceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThecoachId")
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("ID");

                    b.ToTable("AttendanceInfo");
                });

            modelBuilder.Entity("FitnessEntity.ClassInfo", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseId")
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Coursename")
                        .HasColumnType("varchar(36)");

                    b.Property<int>("Standard")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ThecoachInInfoId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("EntertainmentInfo");
                });

            modelBuilder.Entity("FitnessEntity.ClassTypesInfo", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Type")
                        .HasColumnType("varchar(36)");

                    b.HasKey("ID");

                    b.ToTable("ClassTypesInfo");
                });

            modelBuilder.Entity("FitnessEntity.GoodsInfo", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(36)");

                    b.Property<string>("GoodsName")
                        .HasColumnType("varchar(36)");

                    b.Property<string>("GoodsTypeId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<int>("Money")
                        .HasColumnType("int");

                    b.Property<string>("Num")
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("ID");

                    b.ToTable("GoodsInfo");
                });

            modelBuilder.Entity("FitnessEntity.GoodsRecord", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Creator")
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("GoodsId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<int>("Num")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("GoodsRecord");
                });

            modelBuilder.Entity("FitnessEntity.GoodsType", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("varchar(36)");

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("ID");

                    b.ToTable("GoodsType");
                });

            modelBuilder.Entity("FitnessEntity.MenuInfo", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Href")
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Icon")
                        .HasColumnType("varchar(32)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("ParentId")
                        .HasColumnType("varchar(36)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<string>("Target")
                        .HasColumnType("varchar(16)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(16)");

                    b.HasKey("ID");

                    b.ToTable("MenuInfo");
                });

            modelBuilder.Entity("FitnessEntity.R_RoleInfo_MenuInfo", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("MenuID")
                        .HasColumnType("varchar(36)");

                    b.Property<string>("RoleID")
                        .HasColumnType("varchar(36)");

                    b.HasKey("ID");

                    b.ToTable("R_RoleInfo_MenuInfo");
                });

            modelBuilder.Entity("FitnessEntity.R_UserInfo_RoleInfo", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleID")
                        .HasColumnType("varchar(36)");

                    b.Property<string>("UserID")
                        .HasColumnType("varchar(36)");

                    b.HasKey("ID");

                    b.ToTable("R_UserInfo_RoleInfo");
                });

            modelBuilder.Entity("FitnessEntity.RechargeInfo", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrentBalance")
                        .HasColumnType("varchar(36)");

                    b.Property<int>("InsertType")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("RechargeInfo");
                });

            modelBuilder.Entity("FitnessEntity.RoleInfo", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(36)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(16)");

                    b.HasKey("ID");

                    b.ToTable("RoleInfo");
                });

            modelBuilder.Entity("FitnessEntity.UserInfo", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasColumnType("varchar(16)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(32)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("NumberId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .HasColumnType("varchar(32)");

                    b.Property<string>("PhoneNum")
                        .HasColumnType("varchar(16)");

                    b.Property<int>("Sex")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("ID");

                    b.ToTable("UserInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
